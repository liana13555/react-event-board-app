{"version":3,"sources":["components/Event/Event.module.css","components/PageTitle/PageTitle.module.css","components/EventBoard/EventBoard.module.css","components/PageTitle/PageTitle.jsx","components/Event/Event.jsx","utils/formatEventStart.js","utils/formatEventDuration.js","components/EventBoard/EventBoard.jsx","components/App.jsx","index.js"],"names":["module","exports","PageTitle","text","className","css","title","Event","name","location","speaker","type","start","end","formattedStart","format","Date","parse","formatEventStart","duration","formatDistanceStrict","formatEventDuration","event","info","icon","size","chip","EventBoard","events","console","log","eventBoard","map","time","App","upcomingEvents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,IAAM,qB,qBCAzND,EAAOC,QAAU,CAAC,MAAQ,2B,gBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,s+CCElBC,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OAAO,oBAAIC,UAAWC,IAAIC,MAAnB,SAA2BH,K,uCCIvBI,EAAQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACpDC,ECNsB,SAAAF,GAC5B,OAAOG,YAAOC,KAAKC,MAAML,GAAQ,uBDKVM,CAAiBN,GAClCO,EERyB,SAACP,EAAOC,GAAU,OAAOO,YAAqBJ,KAAKC,MAAML,GAC5FI,KAAKC,MAAMJ,IFOUQ,CAAoBT,EAAOC,GAE5C,OACA,sBAAKT,UAAWC,IAAIiB,MAApB,UACE,oBAAIlB,UAAWC,IAAIC,MAAnB,SAA2BE,IAC3B,oBAAGJ,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAgBnB,UAAWC,IAAImB,KAAMC,KAAM,KAC1ChB,KAEH,oBAAGL,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAWnB,UAAWC,IAAImB,KAAMC,KAAM,KACrCf,KAEH,oBAAGN,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAAenB,UAAWC,IAAImB,KAAMC,KAAM,KACzCX,KAEH,oBAAGV,UAAWC,IAAIkB,KAAlB,UACE,cAAC,IAAD,CAASnB,UAAWC,IAAImB,KAAMC,KAAM,KACnCN,KAGH,sBAAMf,UAAS,UAAKC,IAAIqB,KAAT,YAAiBrB,IAAIM,IAApC,SAA8CA,Q,iBG5BvCgB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzB,OADAC,QAAQC,IAAIF,GAER,qBAAKxB,UAAWC,IAAI0B,WAApB,SACKH,EAAOI,KAAI,gBAAExB,EAAF,EAAEA,KAAMC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,KAAMsB,EAAjC,EAAiCA,KAAjC,OACR,cAAC,EAAD,CAEIzB,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTC,KAAMA,EACNC,MAAOqB,EAAKrB,MACZC,IAAKoB,EAAKpB,KANLL,S,QCLZ0B,EAAM,WACf,OACI,qCACI,cAAC,EAAD,CAAW/B,KAAK,0CAChB,cAAC,EAAD,CAAYyB,OAAQO,QCHhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.500fde08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"Event_event__kZKFX\",\"title\":\"Event_title__knnry\",\"info\":\"Event_info__PESNT\",\"icon\":\"Event_icon__vN4fA\",\"chip\":\"Event_chip__2AikV\",\"free\":\"Event_free__1jBt6\",\"paid\":\"Event_paid__Yc5Dd\",\"vip\":\"Event_vip__2bWjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__D_bdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventBoard\":\"EventBoard_eventBoard__2r6ei\"};","import PropTypes from 'prop-types';\r\nimport css from './PageTitle.module.css';\r\n\r\nexport const PageTitle = ({ text }) => {\r\n  return <h1 className={css.title}>{text}</h1>;\r\n};\r\n\r\nPageTitle.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { FaMapMarkerAlt, FaUserAlt, FaCalendarAlt, FaClock } from \"react-icons/fa\";\r\n// import { formatEventStart } from 'utils/formatEventStart';\r\n// import {formatEventDuration} from 'utils/formatEventDuration';\r\nimport { formatEventStart, formatEventDuration } from 'utils';\r\n// import { iconSize } from 'constants';\r\nimport css from './Event.module.css';\r\n\r\nexport const Event = ({ name, location, speaker, type, start, end }) => {\r\n    const formattedStart = formatEventStart(start);\r\n    const duration = formatEventDuration(start, end);\r\n\r\n    return (    \r\n    <div className={css.event}>\r\n      <h2 className={css.title}>{name}</h2>\r\n      <p className={css.info}>\r\n        <FaMapMarkerAlt className={css.icon} size={16} />   \r\n        {location}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaUserAlt className={css.icon} size={16}/>\r\n        {speaker}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaCalendarAlt className={css.icon} size={16}/>\r\n        {formattedStart}\r\n      </p>\r\n      <p className={css.info}>\r\n        <FaClock className={css.icon} size={16} />\r\n        {duration}\r\n      </p>\r\n            {/* <span className={css.chip}>{type}</span> */}\r\n      <span className={`${css.chip} ${css[type]}`}>{type}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\n// size={iconSize.sm}\r\n\r\nEvent.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    speaker: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    start: PropTypes.string.isRequired,\r\n    end: PropTypes.string.isRequired,\r\n}\r\n\r\n","import { format } from 'date-fns';\r\n// import { ru } from 'date-fns/locale';  // Если хотим напр. на русском\r\n\r\nexport const formatEventStart = start => {\r\n    return format(Date.parse(start), 'dd MMMM yyyy, HH:mm',\r\n        // { locale: ru, }\r\n    );\r\n};","import { formatDistanceStrict } from 'date-fns';\r\n\r\nexport const formatEventDuration = (start, end) => { return formatDistanceStrict(Date.parse(start),\r\nDate.parse(end)); };","import {Event} from 'components/Event/Event';\r\nimport css from './EventBoard.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const EventBoard = ({ events }) => {\r\n    console.log(events);\r\n    return (\r\n        <div className={css.eventBoard}>\r\n            {events.map(({name, location, speaker, type, time}) => (\r\n                <Event\r\n                    key={name}\r\n                    name={name}\r\n                    location={location}\r\n                    speaker={speaker}\r\n                    type={type}\r\n                    start={time.start}\r\n                    end={time.end}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nEventBoard.propTypes = {\r\n    events: PropTypes.arrayOf(PropTypes.exact({\r\n        name: PropTypes.string.isRequired,\r\n        location: PropTypes.string.isRequired,\r\n        speaker: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        time: PropTypes.exact({\r\n            start: PropTypes.string.isRequired,\r\n            end: PropTypes.string.isRequired,\r\n        })     \r\n    },),\r\n    ),\r\n}","import { PageTitle } from \"components/PageTitle/PageTitle\";\r\nimport { EventBoard } from \"components/EventBoard/EventBoard\";\r\nimport upcomingEvents from '../upcoming-events.json';\r\n\r\n\r\nexport const App = () => {\r\n    return (\r\n        <>\r\n            <PageTitle text=\"24th Core Worlds Coalition Conference\" />\r\n            <EventBoard events={upcomingEvents} />\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}